from pathlib import Path
from typing import Any, Tuple

MAX_PROCESSES = 8

LP_CONFIGS_PATH = "lp_configs"
LP_CONFIGS_PATH = Path(LP_CONFIGS_PATH)

CONFIGS_PATH = "configs"
CONFIGS_PATH = Path(CONFIGS_PATH)

ENTITY_EMBEDDINGS_PATH = "entity_embeddings"
ENTITY_EMBEDDINGS_PATH = Path(ENTITY_EMBEDDINGS_PATH)

RELATION_EMBEDDINGS_PATH = "relation_embeddings"
RELATION_EMBEDDINGS_PATH = Path(RELATION_EMBEDDINGS_PATH)

MODELS_PATH = "models"
MODELS_PATH = Path(MODELS_PATH)

CANDIDATES_PATH = "candidates"
CANDIDATES_PATH = Path(CANDIDATES_PATH)

EXPLANATIONS_PATH = "explanations"
EXPLANATIONS_PATH = Path(EXPLANATIONS_PATH)

EVALUATIONS_PATH = "evaluations"
EVALUATIONS_PATH = Path(EVALUATIONS_PATH)

METRICS_PATH = "metrics"
METRICS_PATH = Path(METRICS_PATH)

RANKINGS_PATH = "rankings"
RANKINGS_PATH = Path(RANKINGS_PATH)

DATA_PATH = "data"
DB50K = "DB50K"
DB100K = "DB100K"
YAGO4_20 = "YAGO4-20"
FB15K237 = "FB15k-237"
WN18RR = "WN18RR"
YAGO310 = "YAGO3-10"
FR200K = "FR200K"
FRUNI = "FRUNI"
FTREE = "FTREE"

CONVE = "ConvE"
COMPLEX = "ComplEx"
TRANSE = "TransE"

CRIAGE = "criage"
DATA_POISONING = "data-poisoning"
IMAGINE = "imagine"
KELPIE = "kelpie"
KELPIEPP = "kelpie++"
GENI = "GEnI"
BENCHMARK = "benchmark"

NECESSARY = "necessary"
SUFFICIENT = "sufficient"

MODES = [NECESSARY, SUFFICIENT]
METHODS = [CRIAGE, DATA_POISONING, IMAGINE, KELPIE, KELPIEPP, GENI, BENCHMARK]
DATASETS = [DB50K, DB100K, YAGO4_20, FB15K237, WN18RR, YAGO310, FR200K, FRUNI, FTREE]
MODELS = [CONVE, COMPLEX, TRANSE]

ANY = "any"
FIRST = "first"
NOT_FIRST = "notfirst"
PRED_RANKS = [ANY, FIRST, NOT_FIRST]

DATA_PATH = Path(DATA_PATH)
DB50K_PATH = DATA_PATH / DB50K
DB50K_REASONED_PATH = DB50K_PATH / "reasoned"

DB100K_PATH = DATA_PATH / DB100K
DB100K_REASONED_PATH = DB100K_PATH / "reasoned"

YAGO4_20_PATH = DATA_PATH / YAGO4_20
YAGO4_20_REASONED_PATH = YAGO4_20_PATH / "reasoned"

PREDICTIONS_PATH = Path("preds")
SELECTED_PREDICTIONS_PATH = Path("selected_preds")

SAMPLED_SELECTED_PREDICTIONS_PATH = Path("sampled_selected_preds")

key = lambda x: x[1]

Triple = Tuple[Any, Any, Any]
